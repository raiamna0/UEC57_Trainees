
@model IEnumerable<WebformReal.Models.UEC_UEC57>



@{

    ViewBag.Title = "Qarn Alam Steam";

}

<!DOCTYPE html>

<html>

<head>

    <meta charset="utf-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>@ViewBag.Title UEC3</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

   <style>
       body {
           font-family: Arial, sans-serif;
           background-color: #f7f7f7;
           margin: 0;
           padding: 0;
       }


       .container {
           max-width: 100%;
           padding: 20px;
           box-sizing: border-box;
           margin: 100px auto 0px auto;
       }



       /* Navbar styles */

       .navbar {
           background-color: #255932; /* Purple background color */
           color: #fff; /* Text color */
           /*text-align: center;*/
           padding: 15px 0;
           position: fixed;
           top: 0; /* Stick it to the top of the page */
           width: 100%;
           height: 55px;
           z-index: 2; /* Place the navbar above the menu overlay */
           display: flex;
           justify-content: space-between;
       }

           .navbar h1 {
               /*margin: 0;
        font-size: 24px;
        margin-top: -10px;*/
           }


       /* Create New Item Button styles 
*/
       .create-button {
           /*text-align: right;*/ /* Align to the right */
           /*margin-top: 20px;*/ /* Adjust the margin to move it up */
           /*margin-right: 10px;*/
           display: flex;
       }


       .heading {
           /*    margin-top:20px;
*/
       }


       .create-link {
           background-color: olivedrab; /* Green button color */
           color: #fff;
           text-decoration: none;
           padding: 10px;
           margin: 10px;
           border-radius: 5px;
           font-weight: bold;
           transition: background-color 0.3s;
       }

           .create-link:hover {
               background-color: #25775b; /* Darker green on hover */
           }


       /* Data table styles */
       .data-table {
           /*    width: 100%;*/
           border-collapse: collapse;
           border: 1px solid #ccc;
           background-color: #fff;
           table-layout: fixed;
       }



       .empty-space {
           height: 100px; /* Adjust the height as needed */
       }



       /* Menu button styles */
       .menu-button {
           cursor: pointer;
           display: flex;
           flex-direction: column;
           justify-content: space-between;
           height: 25px;
           width: 53px;
           margin-right: 10px;
           z-index: 3; /* Place the menu button above the menu overlay */
           position: relative; /* Add relative positioning to use z-index */
           padding: 5px;
       }





       .menu-icon {
           background-color: #fff;
           height: 3px;
           width: 30px;
           border-radius: 2px;
           margin-left: 20px;
           margin-top: 5px;
       }





       /* Menu styles */
       .menu {
           position: fixed;
           top: 84px; /* Adjust this value to match your navbar height */
           left: -250px; /* Initially hide the menu off-screen */
           width: 250px;
           height: 100%;
           background-color: #2c5d42;
           box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
           z-index: 1; /* Place the menu below the navbar */
           overflow-y: auto;
           transition: left 0.3s ease-in-out;
       }





           .menu ul {
               list-style-type: none;
               padding: 0;
               margin: 0;
           }





           .menu li {
               border-bottom: 1px solid #ccc;
           }





           .menu a {
               text-decoration: none;
               color: white;
               display: block;
               padding: 20px;
           }





               .menu a:hover {
                   background-color: #25775b;
                   /*padding: 6px;
            margin-right: 40px;*/
               }





           /* Show the menu when the show-menu class is applied */
           .menu.show-menu {
               left: 0;
               pointer-events: auto;
           }







       /* Menu overlay styles */
       .menu-overlay {
           display: none;
           position: fixed;
           top: 84px;
           left: 0;
           width: 100%;
           height: calc(100% - 84px);
           background-color: rgba(0, 0, 0, 0.3);
           z-index: 0; /* Place the menu overlay below the menu */
       }





       /* Display the menu overlay when the show-menu class is applied */
       .menu.show-menu + .menu-overlay {
           display: block;
       }



       .data-table th,
       .data-table td {
           padding: 10px;
           border: 1px solid #ccc;
           text-align: left;
           word-wrap: break-word; /* Allow text to wrap */
       }





       .data-table th {
           background-color: #f2f2f2;
           font-weight: bold;
           color: #0d7b4e;
           text-align: center;
       }





       .data-table tr:nth-child(even) {
           background-color: #dff5e5; /* or any color you prefer */
       }





       /* Action button styles */
       .action-button {
           display: inline-block;
           padding: 5px 10px;
           margin: 5px;
           text-decoration: none;
           color: black;
           border-radius: 5px;
           font-weight: bold;
           text-align: center;
           transition: background-color 0.3s;
       }





           .action-button .icon {
               /* margin-right: 5px;*/
               font-size: 13px;
           }





       /* Edit button styles */
       .edit-button {
           /*background-color: #4581c1;*/
           font-size: 10px;
           padding: 5px 13px;
       }





           .edit-button:hover {
               background-color: #70aae7;
           }





       /* Details button styles */
       .details-button {
           /* background-color: #c6a953;*/
           font-size: 10px;
       }




           .details-button:hover {
               background-color: #e1cb88;
           }




       /* Delete button styles */
       .delete-button {
           /*background-color: #ee4858;*/
           font-size: 10px;
       }




           .delete-button:hover {
               background-color: #cd616b;
           }




       .fixed-header {
           position: sticky;
           top: 0;
           background-color: #f2f2f2;
           z-index: 0;
           font-size: small;
       }



       .table-wrapper {
           max-height: auto; /**/ /* Set a max height for the table to enable scrolling */
           overflow-y: auto; /* Enable vertical scrolling */
           width: 100%;
           font-size: 11px;
       }


       .custom-filter-button {
           color: #255932;
           text-align: center;
           cursor: pointer;
       }
   </style>



</head>

<body style="font-size:12px; ">



    <div class="navbar-container">

        <div class="navbar">

            <div class="menu-button" id="menuButton">

                <div class="menu-icon"></div>

                <div class="menu-icon"></div>

                <div class="menu-icon"></div>

            </div>

            <div class="heading"><h1>Qarn Alam Steam</h1></div>

            <div class="create-button">

                @Html.ActionLink("Create New Item", "UEC_UEC57_AlamCreate", null, new { @class = "create-link" })

            </div>

        </div>

        <div class="menu" id="menu">

            <ul>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_AlamIndex" ? "active" : "")">@Html.ActionLink("Qarn Alam Steam", "UEC_UEC57_AlamIndex", "UEC_UEC57")</li>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_AmalIndex" ? "active" : "")">@Html.ActionLink("Amal Steam", "UEC_UEC57_AmalIndex", "UEC_UEC57")</li>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_HarweelIndex" ? "active" : "")">@Html.ActionLink("Harweel", "UEC_UEC57_HarweelIndex", "UEC_UEC57")</li>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_BirbaIndex" ? "active" : "")">@Html.ActionLink("Birba", "UEC_UEC57_BirbaIndex", "UEC_UEC57")</li>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_AlnoorIndex" ? "active" : "")">@Html.ActionLink("Al noor", "UEC_UEC57_AlnoorIndex", "UEC_UEC57")</li>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_RHIPIndex" ? "active" : "")">@Html.ActionLink("RHIP", "UEC_UEC57_RHIPIndex", "UEC_UEC57")</li>

                <li class="@Html.Raw(ViewContext.RouteData.Values["Action"].ToString() == "UEC_UEC57_YKPIndex" ? "active" : "")">@Html.ActionLink("YKP", "UEC_UEC57_YKPIndex", "UEC_UEC57")</li>

            </ul>

        </div>

        <div class="menu-overlay" id="menuOverlay"></div>

    </div>



    @if (TempData["InsertMessage"] != null)

    {

        <div class="alert alert-success alert-dismissible">

            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>

            <strong>Success! </strong>@TempData["InsertMessage"]

        </div>

    }



    @if (TempData["UpdateMessage"] != null)

    {

        <div class="alert alert-success alert-dismissible">

            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>

            <strong>Success!</strong> @TempData["UpdateMessage"]

        </div>

    }

    @if (TempData["DeleteMessage"] != null)

    {

        <div class="alert alert-success alert-dismissible">

            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>

            <strong>Success!</strong> @TempData["DeleteMessage"]

        </div>

    }







    <div class="container">

        <div class="table-wrapper">

            <table class="data-table">

                <thead class="fixed-header">

                    <tr>

                        <th>Sr.</th>

                        <th>Corrosion Loops / Unit Name</th>

                        <th>Unit Description</th>

                        <th>Built As Design</th>

                        <th>IOW (Within / Outside)</th>

                        <th>Based Line Inspection</th>

                        <th>Compliance with CMM</th>

                        <th>Inspection Does Not Reveal Any Major Findings</th>

                        <th>No Temporary Repair (Clamps, Batches)</th>

                        <th>Compliance to Performance Standard</th>

                        <th>FSR / Quality</th>

                        <th>Risk Level</th>

                        <th>Current Status</th>

                        <th>Threats</th>

                        <th>Probability</th>

                        <th>Consequence</th>

                        <th>Operations</th>

                    </tr>

                    <!-- Blank Row -->

                    <tr class="blank-row">

                        <td></td>
                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options " aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter0" onclick="toggleFilteringCard('filteringCard0')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard0" style="display: none;">
                                <label for="filterSheetName"></label>
                                <select id="filterCardSelect0" class="filter-select" style="width: 100%">
                                    <option value="">All</option>
                                    @{
                                        var uniqueValues1 = Model.Select(m => m.UEC_UEC57_Alam_UnitName).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();
                                        foreach (var item in uniqueValues1)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                        <td></td>
                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options " aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter1" onclick="toggleFilteringCard('filteringCard')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard" style="display: none;">
                                <label for="filterSheetName"></label>
                                <select id="filterBuildasDesign" class="filter-select">
                                    <option value="">All</option>
                                    @{
                                        var uniqueValues = Model.Select(m => m.UEC_UEC57_Alam_BuiltAsDesign).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();
                                        foreach (var item in uniqueValues)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    }
                                </select>
                            </div>
                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter1" onclick="toggleFilteringCard('filteringCard2')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard2" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect2" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique2Values = Model.Select(m => m.UEC_UEC57_Alam_IOW).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique2Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter3" onclick="toggleFilteringCard('filterBasedLineInspectionCard')"></i>
                            </div>

                            <div class="filter-dropdown" id="filterBasedLineInspectionCard" style="display: none;">

                                <label for="filterBasedLineInspection"></label>

                                <select id="filterBasedLineInspectionCardSelect" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique3Values = Model.Select(m => m.UEC_UEC57_Alam_BasedLineInspection).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique3Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>



                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter4" onclick="toggleFilteringCard('filteringCard4')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard4" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect4" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique4Values = Model.Select(m => m.UEC_UEC57_Alam_CompliancewithCMM).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique4Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter5" onclick="toggleFilteringCard('filteringCard5')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard5" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect5" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique5Values = Model.Select(m => m.UEC_UEC57_Alam_Inspection).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique5Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter6" onclick="toggleFilteringCard('filteringCard6')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard6" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect6" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique6Values = Model.Select(m => m.UEC_UEC57_Alam_NoTemporaryRepair).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique6Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter7" onclick="toggleFilteringCard('filteringCard7')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard7" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect7" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique7Values = Model.Select(m => m.UEC_UEC57_Alam_CompliancetoPerformanceStandard).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique7Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter8" onclick="toggleFilteringCard('filteringCard8')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard8" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect8" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique8Values = Model.Select(m => m.UEC_UEC57_Alam_FSR).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique8Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter9" onclick="toggleFilteringCard('filteringCard9')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard9" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect9" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique9Values = Model.Select(m => m.UEC_UEC57_Alam_RiskLevel).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique9Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter10" onclick="toggleFilteringCard('filteringCard10')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard10" style="display: none;">

                                <input type="text" id="filterCardSelect10" placeholder="Current Status..." class="filter-select">

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter11" onclick="toggleFilteringCard('filteringCard11')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard11" style="display: none;">

                                <input type="text" id="filterCardSelect11" placeholder="Threats..." class="filter-select" style="width: 100%;">

                            </div>

                        </td>


                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter12" onclick="toggleFilteringCard('filteringCard12')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard12" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect12" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique12Values = Model.Select(m => m.UEC_UEC57_Alam_Probability).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique12Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td class="filter-column" colspan="1">
                            <div class="custom-filter-button" role="button" aria-label="Show filter options for column 'Year'" aria-haspopup="dialog" tabindex="0">
                                <i class="fas fa-filter filter-icon" id="filter13" onclick="toggleFilteringCard('filteringCard13')"></i>
                            </div>

                            <div class="filter-dropdown" id="filteringCard13" style="display: none;">

                                <label for="filterSheetName"></label>

                                <select id="filterCardSelect13" class="filter-select">

                                    <option value="">All</option>

                                    @{

                                        var unique13Values = Model.Select(m => m.UEC_UEC57_Alam_Consequence).Where(val => !string.IsNullOrEmpty(val)).Distinct().ToList();

                                        foreach (var item in unique13Values)

                                        {

                                            <option value="@item">@item</option>

                                        }

                                    }

                                </select>

                            </div>

                        </td>

                        <td></td>

                    </tr>

                </thead>




                <tbody>

                    @{

                        int counter = 1;

                        foreach (var item in Model)

                        {

                            <tr style="font-size:11px;">

                                <td>@counter</td>

                                <td>@item.UEC_UEC57_Alam_UnitName</td>

                                <td>@item.UEC_UEC57_Alam_UnitDescription</td>

                                <td>@item.UEC_UEC57_Alam_BuiltAsDesign</td>

                                <td>@item.UEC_UEC57_Alam_IOW</td>

                                <td>@item.UEC_UEC57_Alam_BasedLineInspection</td>

                                <td>@item.UEC_UEC57_Alam_CompliancewithCMM</td>

                                <td>@item.UEC_UEC57_Alam_Inspection</td>

                                <td>@item.UEC_UEC57_Alam_NoTemporaryRepair</td>

                                <td>@item.UEC_UEC57_Alam_CompliancetoPerformanceStandard</td>

                                <td>@item.UEC_UEC57_Alam_FSR</td>

                                <td>@item.UEC_UEC57_Alam_RiskLevel</td>

                                <td>@item.UEC_UEC57_Alam_CurrentStatus</td>

                                <td>@item.UEC_UEC57_Alam_Threats</td>

                                <td>@item.UEC_UEC57_Alam_Probability</td>

                                <td>@item.UEC_UEC57_Alam_Consequence</td>

                                <td class="actions">

                                    <!-- Delete Button -->

                                    <a href="@Url.Action("UEC_UEC57_AlamDelete", new { id = item.UEC_UEC57_Alam_id })" class="action-button delete-button">

                                        <span class="icon">&#128465;</span> Delete

                                    </a>

                                    <!-- Edit Button -->

                                    <a href="@Url.Action("UEC_UEC57_AlamEdit", new { id = item.UEC_UEC57_Alam_id })" class="action-button edit-button">

                                        <span class="icon">&#9998;</span> Edit

                                    </a>

                                    <!-- Details Button -->

                                    <a href="@Url.Action("UEC_UEC57_AlamDetails", new { id = item.UEC_UEC57_Alam_id })" class="action-button details-button">

                                        <span class="icon">&#8505;</span> Details

                                    </a>

                                </td>



                            </tr>

                            counter++;

                        }

                    }

                </tbody>

            </table>

        </div>

    </div>





    <script>

        // Menu Button

        const menuButton = document.getElementById("menuButton");

        const menu = document.getElementById("menu");

        const menuOverlay = document.getElementById("menuOverlay");



        menuButton.addEventListener("click", function () {

            menu.classList.toggle("show-menu");

            menuOverlay.classList.toggle("show-menu-overlay");

        });



        menuOverlay.addEventListener("click", function (event) {

            if (event.target === menuOverlay) {

                menu.classList.remove("show-menu");

                menuOverlay.classList.remove("show-menu-overlay");

            }

        });


        const selectedValues = {};
        // Function to filter the table by column
        function filterTableByColumn(filterInputId, columnIndex) {

            const selectedValue = document.getElementById(filterInputId).value.toLowerCase();
            selectedValues[columnIndex] = selectedValue; // Store the selected value for this column
            const tableRows = document.querySelectorAll(".data-table tbody tr");

            tableRows.forEach(function (row) {
                let showRow = true;

                // Loop through the selected values for each column and apply "AND" logic
                for (const colIndex in selectedValues) {
                    const cell = row.querySelector(`td:nth-child(${colIndex})`);
                    if (cell) {
                        const cellValue = cell.textContent.toLowerCase();
                        const filterValue = selectedValues[colIndex];
                        if (filterValue !== "" && !cellValue.includes(filterValue)) {
                            showRow = false;
                            break; // If any filter condition fails, hide the row
                        }
                    }
                }
                row.style.display = showRow ? "" : "none";
            });
        }


        // Function to toggle the table based on selected column

        function toggleFilteringCard(cardId) {

            const card = document.getElementById(cardId);

            card.style.display = card.style.display === "none" ? "block" : "none";

        }
        //2nd column

        document.getElementById("filterCardSelect0").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect0", 2);

        });
        //4th column

        document.getElementById("filterBuildasDesign").addEventListener("change", function () {

            filterTableByColumn("filterBuildasDesign", 4);

        });

        ///5th column

        document.getElementById("filterCardSelect2").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect2", 5);

        });

        ///6th column

        document.getElementById("filterBasedLineInspectionCard").addEventListener("change", function () {

            filterTableByColumn("filterBasedLineInspectionCardSelect", 6);

        });

        ///7th column

        document.getElementById("filterCardSelect4").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect4", 7);

        });

        ///8th column

        document.getElementById("filterCardSelect5").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect5", 8);



        });

        ///9th column

        document.getElementById("filterCardSelect6").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect6", 9);

        });

        ///10th column

        document.getElementById("filterCardSelect7").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect7", 10);

        });

        ///11th column

        document.getElementById("filterCardSelect8").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect8", 11);

        });



        ///12th column

        document.getElementById("filterCardSelect9").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect9", 12);

        });

        ///13th column

        document.getElementById("filterCardSelect10").addEventListener("input", function () {

            filterTableByColumn("filterCardSelect10", 13);

        });

        ///14th column

        document.getElementById("filterCardSelect11").addEventListener("input", function () {

            filterTableByColumn("filterCardSelect11", 14);

        });



        ///15th column

        document.getElementById("filterCardSelect12").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect12", 15);

        });

        ///16th column

        document.getElementById("filterCardSelect13").addEventListener("change", function () {

            filterTableByColumn("filterCardSelect13", 16);

        });





    </script>



</body>

</html>

